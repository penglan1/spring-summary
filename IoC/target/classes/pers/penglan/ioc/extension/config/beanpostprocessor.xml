<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-init-method="init" default-destroy-method="destroy">

    <!--
    BeanPostProcessors operate on bean (or object) instances; that is to say, the Spring
    IoC container instantiates a bean instance and then BeanPostProcessors do their work.
    调用顺序：
        ① 实例化bean（包括构造和set注入）
        ② BeanPostProcessors(调用顺序通过实现Order接口来设定）
        ③ init-method
    -->
    <!--注册自定义的BeanPostProcessor-->
    <bean class="pers.penglan.ioc.extension.beanpostprocessor.BeanPostProcessorImpl"/>

    <!--通过配置文件来指定初始化方法和销毁时方法，与java代码解耦-->
    <bean id="lifecycle" class="pers.penglan.ioc.entity.extension.Lifecycle"
          init-method="init"
          destroy-method="destroy">
        <property name="name" value="马超"/>
    </bean>

    <!--没有指明初始化方法和销毁时方法，默认会使用配置文件beans中配置的全局的方法-->
    <bean id="lifecycle2" class="pers.penglan.ioc.entity.extension.Lifecycle">
        <property name="name" value="赵云"/>
    </bean>
</beans>